# Generated by Django 5.2.6 on 2025-09-04 02:55

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Family', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('username', models.CharField(help_text='用于登录系统的唯一标识', max_length=50, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱地址')),
                ('nickname', models.CharField(help_text='在系统中显示的名称', max_length=100, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('relationship', models.CharField(blank=True, help_text='如：本人、配偶、子女等', max_length=50, verbose_name='与户主关系')),
                ('role', models.CharField(choices=[('admin', '管理员'), ('member', '普通用户')], default='member', max_length=10, verbose_name='用户角色')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='加入时间')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='激活状态')),
                ('is_staff', models.BooleanField(default=False, help_text='是否可以登录管理后台', verbose_name='管理员状态')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='超级用户状态')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='Family.family', verbose_name='所属家庭')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户管理',
                'db_table': 'user',
                'indexes': [models.Index(fields=['username'], name='user_usernam_b79065_idx'), models.Index(fields=['email'], name='user_email_7bbb4c_idx'), models.Index(fields=['family', 'role'], name='user_family__3fb736_idx')],
            },
        ),
    ]
